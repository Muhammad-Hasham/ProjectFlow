{"version":3,"file":"static/js/555.c44045a7.chunk.js","mappings":"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","sources":["components/Button/index.jsx","components/Img/index.jsx","components/ErrorMessage/index.jsx","components/Input/index.jsx","components/SelectBox/index.jsx","components/Text/index.jsx","pages/ProjectVisualization/details.jsx","pages/ProjectVisualization/kanbanpopup.jsx","pages/ProjectVisualization/kanban.jsx","pages/Sidebar/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst shapes = { round: \"rounded-lg\" };\r\nconst variants = {\r\n  gradient: {\r\n    blue_gray_300_01_deep_orange_500: \"bg-gradient  text-white-A700\",\r\n  },\r\n  fill: {\r\n    indigo_800: \"bg-indigo-800 text-white-A700\",\r\n    indigo_800_01: \"bg-indigo-800_01 text-white-A700\",\r\n  },\r\n};\r\nconst sizes = { xs: \"p-3\", sm: \"p-[22px] sm:px-5\" };\r\n\r\nconst Button = ({\r\n  children,\r\n  className = \"\",\r\n  leftIcon,\r\n  rightIcon,\r\n  shape = \"\",\r\n  size = \"xs\",\r\n  variant = \"fill\",\r\n  color = \"\",\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <button\r\n      className={`${className} ${(shape && shapes[shape]) || \"\"} ${\r\n        (size && sizes[size]) || \"\"\r\n      } ${(variant && variants[variant]?.[color]) || \"\"}`}\r\n      {...restProps}\r\n    >\r\n      {!!leftIcon && leftIcon}\r\n      {children}\r\n      {!!rightIcon && rightIcon}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  shape: PropTypes.oneOf([\"round\"]),\r\n  size: PropTypes.oneOf([\"xs\", \"sm\"]),\r\n  variant: PropTypes.oneOf([\"gradient\", \"fill\"]),\r\n  color: PropTypes.oneOf([\r\n    \"blue_gray_300_01_deep_orange_500\",\r\n    \"indigo_800\",\r\n    \"indigo_800_01\",\r\n  ]),\r\n};\r\n\r\nexport { Button };\r\n","import React from \"react\";\r\n\r\nconst Img = ({\r\n  className,\r\n  src = \"defaultNoData.png\",\r\n  alt = \"testImg\",\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <img\r\n      className={className}\r\n      src={src}\r\n      alt={alt}\r\n      {...restProps}\r\n      loading={\"lazy\"}\r\n    />\r\n  );\r\n};\r\nexport { Img };\r\n","import React from \"react\";\r\n\r\nexport const ErrorMessage = ({ errors = [], className = \"\" }) => {\r\n  return (\r\n    errors?.length > 0 && (\r\n      <div\r\n        className={`text-red-500 text-left text-xs w-full mt-1 ${className}`}\r\n      >\r\n        {errors.join(\", \")}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ErrorMessage } from \"../ErrorMessage\";\r\n\r\nconst variants = { fill: { gray_100: \"bg-gray-100 text-gray-800\" } };\r\nconst shapes = {\r\n  round: \"rounded-bl-[15px] rounded-br-none rounded-tl-[15px] rounded-tr-none\",\r\n};\r\nconst sizes = { xs: \"p-6 sm:px-5\" };\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      wrapClassName = \"\",\r\n      className = \"\",\r\n      name = \"\",\r\n      placeholder = \"\",\r\n      type = \"text\",\r\n      children,\r\n      errors = [],\r\n      label = \"\",\r\n      prefix,\r\n      suffix,\r\n      onChange,\r\n      shape = \"round\",\r\n      size = \"xs\",\r\n      variant = \"fill\",\r\n      color = \"gray_100\",\r\n      ...restProps\r\n    },\r\n    ref,\r\n  ) => {\r\n    const handleChange = (e) => {\r\n      if (onChange) onChange(e?.target?.value);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className={`${wrapClassName} \r\n              ${shapes[shape] || \"\"} \r\n              ${variants[variant]?.[color] || \"\"} \r\n              ${sizes[size] || \"\"}`}\r\n        >\r\n          {!!label && label}\r\n          {!!prefix && prefix}\r\n          <input\r\n            ref={ref}\r\n            className={`${className} bg-transparent border-0`}\r\n            type={type}\r\n            name={name}\r\n            onChange={handleChange}\r\n            placeholder={placeholder}\r\n            {...restProps}\r\n          />\r\n          {!!suffix && suffix}\r\n        </div>\r\n        {!!errors && <ErrorMessage errors={errors} />}\r\n      </>\r\n    );\r\n  },\r\n);\r\n\r\nInput.propTypes = {\r\n  wrapClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  type: PropTypes.string,\r\n  shape: PropTypes.oneOf([\"round\"]),\r\n  size: PropTypes.oneOf([\"xs\"]),\r\n  variant: PropTypes.oneOf([\"fill\"]),\r\n  color: PropTypes.oneOf([\"gray_100\"]),\r\n};\r\n\r\nexport { Input };\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ErrorMessage } from \"../ErrorMessage\";\r\n\r\nconst variants = {\r\n  underline: { white_A700: \"border-b border-white-A700 text-blue_gray-900\" },\r\n};\r\n\r\nconst sizes = { xs: \"pb-px\" };\r\n\r\nconst SelectBox = React.forwardRef(\r\n  (\r\n    {\r\n      children,\r\n      placeholder = \"Select\",\r\n      className = \"\",\r\n      options = [],\r\n      isSearchable = false,\r\n      placeholderClassName = \"\",\r\n      isMulti = false,\r\n      onChange,\r\n      value = \"\",\r\n      errors = [],\r\n      indicator,\r\n      shape = \"\",\r\n      size = \"xs\",\r\n      variant = \"underline\",\r\n      color = \"white_A700\",\r\n      ...restProps\r\n    },\r\n    ref,\r\n  ) => {\r\n    const [selectedVal, setSelectedVal] = React.useState(value);\r\n\r\n    const handleChange = (data) => {\r\n      setSelectedVal(data);\r\n      if (isMulti) {\r\n        onChange?.(data?.map((d) => d.value) || []);\r\n      } else {\r\n        onChange?.(data?.value);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Select\r\n          ref={ref}\r\n          options={options}\r\n          className={`${className} ${(size && sizes[size]) || \"\"} ${\r\n            (variant && variants[variant]?.[color]) || \"\"\r\n          }`}\r\n          placeholder={\r\n            <div className={placeholderClassName}>{placeholder}</div>\r\n          }\r\n          isSearchable={isSearchable}\r\n          isMulti={isMulti}\r\n          components={{\r\n            IndicatorSeparator: () => null,\r\n            ...(indicator && { DropdownIndicator: () => indicator }),\r\n          }}\r\n          value={selectedVal}\r\n          onChange={handleChange}\r\n          styles={{\r\n            container: (provided) => ({\r\n              ...provided,\r\n              zIndex: 0,\r\n            }),\r\n            control: (provided) => ({\r\n              ...provided,\r\n              backgroundColor: \"transparent\",\r\n              border: \"0 !important\",\r\n              boxShadow: \"0 !important\",\r\n              minHeight: \"auto\",\r\n              \"&:hover\": {\r\n                border: \"0 !important\",\r\n              },\r\n            }),\r\n            option: (provided, state) => ({\r\n              ...provided,\r\n              color: state.isSelected && \"#fafafa\",\r\n              backgroundColor: state.isSelected && \"#323e73\",\r\n              \"&:hover\": { backgroundColor: \"#323e73\", color: \"#ffffff\" },\r\n            }),\r\n            singleValue: (provided) => ({\r\n              ...provided,\r\n              color: \"inherit\",\r\n            }),\r\n            input: (provided) => ({\r\n              ...provided,\r\n              color: \"inherit\",\r\n              margin: \"0\",\r\n              padding: \"0\",\r\n              // height: \"0\",\r\n            }),\r\n            valueContainer: (provided) => ({\r\n              ...provided,\r\n              padding: \"0\",\r\n            }),\r\n            dropdownIndicator: (provided) => ({\r\n              ...provided,\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"0px\",\r\n            }),\r\n            clearIndicator: (provided) => ({\r\n              ...provided,\r\n              padding: \"0\",\r\n            }),\r\n            multiValueLabel: (provided) => ({\r\n              ...provided,\r\n              padding: \"0\",\r\n            }),\r\n            menuPortal: (base) => ({ ...base, zIndex: 999999 }),\r\n            placeholder: (base) => ({\r\n              ...base,\r\n              margin: 0,\r\n            }),\r\n          }}\r\n          menuPortalTarget={document.body}\r\n          closeMenuOnScroll={(event) => {\r\n            return event.target.id === \"scrollContainer\";\r\n          }}\r\n          {...restProps}\r\n        />\r\n        <ErrorMessage errors={errors} />\r\n        {children}\r\n      </>\r\n    );\r\n  },\r\n);\r\n\r\nSelectBox.propTypes = {\r\n  placeholder: PropTypes.string,\r\n  className: PropTypes.string,\r\n  options: PropTypes.array,\r\n  isSearchable: PropTypes.bool,\r\n  placeholderClassName: PropTypes.string,\r\n  isMulti: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n\r\n  size: PropTypes.oneOf([\"xs\"]),\r\n  variant: PropTypes.oneOf([\"underline\"]),\r\n  color: PropTypes.oneOf([\"white_A700\"]),\r\n};\r\n\r\nSelectBox.defaultProps = {\r\n  placeholder: \"Select\",\r\n  className: \"\",\r\n  isSearchable: false,\r\n  placeholderClassName: \"\",\r\n  isMulti: false,\r\n  value: \"\",\r\n  variant: \"underline\",\r\n  color: \"white_A700\",\r\n  size: \"xs\",\r\n  options: [],\r\n  onChange: () => {},\r\n};\r\nexport { SelectBox };\r\n","import React from \"react\";\r\n\r\nconst sizeClasses = {\r\n  txtPoppinsBold16: \"font-bold font-poppins\",\r\n  txtInterBold16Gray900: \"font-bold font-inter\",\r\n  txtInterMedium24: \"font-inter font-medium\",\r\n  txtPoppinsBold20: \"font-bold font-poppins\",\r\n  txtInterBold16: \"font-bold font-inter\",\r\n  txtPoppinsRegular16WhiteA70001: \"font-normal font-poppins\",\r\n  txtPoppinsBold22: \"font-bold font-poppins\",\r\n  txtPoppinsBold44: \"font-bold font-poppins\",\r\n  txtPoppinsBold34: \"font-bold font-poppins\",\r\n  txtPoppinsRegular16: \"font-normal font-poppins\",\r\n  txtPoppinsRegular16WhiteA700: \"font-normal font-poppins\",\r\n  txtInterBold24: \"font-bold font-inter\",\r\n  txtPoppinsRegular22: \"font-normal font-poppins\",\r\n  txtInterMedium24WhiteA700: \"font-inter font-medium\",\r\n  txtPoppinsMedium12: \"font-medium font-poppins\",\r\n  txtPoppinsExtraBold32: \"font-extrabold font-poppins\",\r\n  txtInterMedium24Gray700: \"font-inter font-medium\",\r\n};\r\n\r\nconst Text = ({ children, className = \"\", size, as, ...restProps }) => {\r\n  const Component = as || \"p\";\r\n\r\n  return (\r\n    <Component\r\n      className={`text-left ${className} ${size && sizeClasses[size]}`}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport { Text };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport { Text, Button } from '../../components';\r\nimport Navigation from '../Sidebar';\r\n\r\nconst ProjectProgress = ({ progress, statisticsData, tasks }) => {\r\n  const [projectname, setProjectname] = useState(\"\");\r\n  const [activeItem, setActiveItem] = useState(null);\r\n  const navigate = useNavigate();\r\n  const { projectId } = useParams();\r\n  const location = useLocation();\r\n  let userrole=localStorage.getItem(\"role\")\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    fetch(`http://127.0.0.1:3000/api/v1/projects/${projectId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Project not found\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setProjectname(data.data.project.name);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error: \", error);\r\n      });\r\n  }, [projectId]);\r\n\r\n  useEffect(() => {\r\n    // Extract the pathname from the location\r\n    const { pathname } = location;\r\n    // Check if any of the menu items match the current pathname\r\n    if (pathname.includes('/details')) {\r\n      setActiveItem(`/details/${projectId}`);\r\n    } else if (pathname.includes('/kanban')) {\r\n      setActiveItem(`/kanban/${projectId}`);\r\n    } else if (pathname.includes('/calendar')) {\r\n      setActiveItem(`/calendar/${projectId}`);\r\n    } else if (pathname.includes('/ganttchart')) {\r\n      setActiveItem(`/ganttchart/${projectId}`);\r\n    } else {\r\n      setActiveItem(null);\r\n    }\r\n  }, [location, projectId]);\r\n\r\n  const navigateTo = (path) => () => {\r\n    setActiveItem(path);\r\n    navigate(path);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh' }}>\r\n      <Navigation />\r\n      <div style={{ width: '73%', padding: '20px', marginLeft: '350px' }}>\r\n        <Text\r\n          className=\"md:ml-[0] ml-[851px] text-base text-indigo-800 tracking-[0.44px]\"\r\n          size=\"txtPoppinsRegular16\"\r\n          onClick={navigateTo('/myprofile')}\r\n        >\r\n          My Profile\r\n        </Text>\r\n        <Text\r\n          className=\"mt-[95px] ml-[50px] sm:text-3xl md:text-[3px] text-[34px] text-left text-indigo-800\"\r\n          size=\"txtPoppinsBold34\"\r\n        >\r\n          {projectname}\r\n        </Text>\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', marginRight: '50px' }}>\r\n        {userrole===\"Project Manager\"  && (\r\n          <Button\r\n            className=\"common-pointer cursor-pointer leading-[normal] min-w-[10px] mt-2.5 text-base text-center tracking-[0.44px]\"\r\n            style={{ width: '100px', marginLeft: '50px' }}\r\n            onClick={navigateTo(`/updateproject/${projectId}`)}\r\n            shape=\"round\"\r\n            color=\"indigo_800_01\"\r\n          >\r\n            Settings\r\n          </Button>\r\n        )}\r\n\r\n{/* {userrole===\"Project Manager\"  && (\r\n          <Button\r\n            className=\"common-pointer cursor-pointer leading-[normal] min-w-[10px] mt-2.5 text-base text-center tracking-[0.44px]\"\r\n            style={{ width: '100px', marginLeft: '50px', backgroundColor: '#BE3144', color: '#ffffff' }}\r\n            onClick={navigateTo(`/updateproject/${projectId}`)}\r\n            shape=\"round\"\r\n          >\r\n            Delete\r\n          </Button>\r\n\r\n)} */}\r\n        </div>\r\n        <div style={{ display: 'flex', alignItems: 'center', marginTop: '20px', cursor: 'pointer' }}>\r\n          <h3\r\n            onClick={navigateTo(`/details/${projectId}`)}\r\n            style={{\r\n              margin: '0 10px',\r\n              padding: '10px 20px',\r\n              borderBottom: activeItem === `/details/${projectId}` ? '3px solid #323F73' : '3px solid transparent',\r\n              fontWeight: activeItem === `/details/${projectId}` ? 'bold' : 'normal',\r\n              color: '#323F73',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Statistics\r\n          </h3>\r\n          <h3\r\n            onClick={navigateTo(`/kanban/${projectId}`)}\r\n            style={{\r\n              margin: '0 70px',\r\n              padding: '10px 20px',\r\n              borderBottom: activeItem === `/kanban/${projectId}` ? '3px solid #323F73' : '3px solid transparent',\r\n              fontWeight: activeItem === `/kanban/${projectId}` ? 'bold' : 'normal',\r\n              color: '#323F73',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Kanban View\r\n          </h3>\r\n          <h3\r\n            onClick={navigateTo(`/calendar/${projectId}`)}\r\n            style={{\r\n              margin: '0 60px',\r\n              padding: '10px 20px',\r\n              borderBottom: activeItem === `/calendar/${projectId}` ? '3px solid #323F73' : '3px solid transparent',\r\n              fontWeight: activeItem === `/calendar/${projectId}` ? 'bold' : 'normal',\r\n              color: '#323F73',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Calendar View\r\n          </h3>\r\n          <h3\r\n            onClick={navigateTo(`/ganttchart/${projectId}`)}\r\n            style={{\r\n              margin: '0 40px',\r\n              padding: '10px 20px',\r\n              borderBottom: activeItem === `/ganttchart/${projectId}` ? '3px solid #323F73' : '3px solid transparent',\r\n              fontWeight: activeItem === `/ganttchart/${projectId}` ? 'bold' : 'normal',\r\n              color: '#323F73',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Gantt View\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectProgress;\r\n","import React, { useState } from 'react';\r\nimport { Text, Button } from '../../components';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nconst KanbanPopup = ({ assigne, onClose, onAddTask }) => {\r\n  const [assign, setAssign] = useState('');\r\n  const [editedTask, setEditedTask] = useState({\r\n    name: '',\r\n    end_date: '',\r\n    description: '',\r\n    assigne: assign\r\n  });\r\n\r\n  const popupAnimation = useSpring({\r\n    from: { opacity: 0, transform: 'translate(-50%, -50%) scale(0.5)' },\r\n    to: { opacity: 1, transform: 'translate(-50%, -50%) scale(1)' },\r\n  });\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setEditedTask((prevTask) => ({\r\n      ...prevTask,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleAssigneeChange = (e) => {\r\n    const selectedAssigneeId = e.target.value;\r\n    setAssign(selectedAssigneeId);\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    const formData = {\r\n      name: editedTask.name,\r\n      end_date: editedTask.end_date,\r\n      description: editedTask.description,\r\n      assignee: assign,\r\n    };\r\n\r\n    // Call the onAddTask function with the updated task data\r\n    onAddTask(formData);\r\n\r\n    // Close the popup\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Background Overlay */}\r\n      <div\r\n        style={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n          background: 'rgba(255, 255, 255, 0.8)',\r\n          backdropFilter: 'blur(5px)',\r\n          zIndex: 1,\r\n        }}\r\n      ></div>\r\n\r\n      {/* Popup */}\r\n      <animated.div\r\n        className=\"popup-container\"\r\n        style={{\r\n          ...popupAnimation,\r\n          zIndex: 2,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"bg-gray-50 popup-content\"\r\n          style={{\r\n            width: '80%',\r\n            padding: '20px',\r\n            borderRadius: '10px',\r\n            position: 'relative',\r\n            top: '5%',\r\n            left: '100%',\r\n            transform: 'translate(-50%, -50%)',\r\n          }}\r\n        >\r\n          <Text style={{ fontFamily: 'Poppins', fontSize: '16px', marginBottom: '10px' }}>\r\n            Name: {' '}\r\n            <input\r\n              type=\"text\"\r\n              value={editedTask.name}\r\n              onChange={(e) => handleInputChange('name', e.target.value)}\r\n              style={{ fontSize: '16px', fontFamily: 'Poppins', border: 'none', outline: 'none', background: 'none' }}\r\n            />\r\n          </Text>\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <Text style={{ fontSize: '16px', fontFamily: 'Poppins' }}>\r\n              Due Date:{' '}\r\n              <input\r\n                type=\"date\"\r\n                value={editedTask.end_date}\r\n                onChange={(e) => handleInputChange('end_date', e.target.value)}\r\n                style={{ fontSize: '16px', fontFamily: 'Poppins', border: 'none', outline: 'none', background: 'none' }}\r\n              />\r\n            </Text>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <Text style={{ fontSize: '16px', fontFamily: 'Poppins' }}>\r\n              Task Assignee:{' '}\r\n              <select\r\n                value={assign}\r\n                onChange={handleAssigneeChange}\r\n                style={{ fontSize: '16px', fontFamily: 'Poppins', border: 'none', outline: 'none', background: 'none' }}\r\n              >\r\n                <option>Select a task assignee</option>\r\n                {assigne.map((member) => (\r\n                  <option key={member.id} value={member.id}>\r\n                    {member.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </Text>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <Text style={{ fontSize: '16px', fontFamily: 'Poppins' }}>\r\n              Description:{' '}\r\n              <input\r\n                type=\"text\"\r\n                value={editedTask.description}\r\n                onChange={(e) => handleInputChange('description', e.target.value)}\r\n                style={{ fontSize: '16px', fontFamily: 'Poppins', border: 'none', outline: 'none', background: 'none' }}\r\n              />\r\n            </Text>\r\n          </div>\r\n\r\n          <div className=\"flex flex-row justify-end\">\r\n            <Button className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-full\" onClick={handleAddTask}>\r\n              Add\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </animated.div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default KanbanPopup;\r\n","// Import necessary modules and styles\r\nimport React, { useEffect, useState } from 'react';\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { Button } from '../../components'; // Assuming Button is imported from 'components'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport ProjectProgress from './details';\r\nimport KanbanPopup from './kanbanpopup';\r\nimport './KanbanComponent.css'; // Import your CSS file with responsive styles\r\nimport axios from 'axios';\r\n\r\nconst KanbanComponent = () => {\r\n  const navigate = useNavigate();\r\n  const { projectId } = useParams();\r\n\r\n  const [tasks, setTasks] = useState({\r\n    todo: [],\r\n    inProgress: [],\r\n    completed: [],\r\n  });\r\n  const { todo, inProgress, completed } = tasks;\r\n  let userrole=localStorage.getItem(\"role\");\r\n\r\n  useEffect(() => {\r\n    // Fetch project details from the API based on the 'projectId' parameter\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    // Fetch the project details using a GET request\r\n    fetch(`http://127.0.0.1:3000/api/v1/projects/${projectId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Project not found\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data.data.project.tasks);\r\n        setTasks({\r\n          todo: data.data.project.tasks.filter((task) => task.status === 'todo'),\r\n          inProgress: data.data.project.tasks.filter((task) => task.status === 'inProgress'),\r\n          completed: data.data.project.tasks.filter((task) => task.status === 'completed'),\r\n        });\r\n\r\n        setAssigne(data.data.project.Members);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error: \", error);\r\n      });\r\n  }, [projectId]);\r\n\r\n  const [newCategory, setNewCategory] = useState('');\r\n  const [showAddCategoryPopup, setShowAddCategoryPopup] = useState(false);\r\n  const [showKanbanPopup, setShowKanbanPopup] = useState(false);\r\n  const [categoryToAddTask, setCategoryToAddTask] = useState('');\r\n  const [assigne, setAssigne] = useState([]);\r\n  const onDragEnd = (result) => {\r\n    const { source, destination, draggableId } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\r\n      return;\r\n    }\r\n\r\n    const newTasks = { ...tasks };\r\n\r\n    if (!newTasks[destination.droppableId]) {\r\n      newTasks[destination.droppableId] = [];\r\n    }\r\n\r\n    const sourceTasks = [...newTasks[source.droppableId]];\r\n    const [removedTask] = sourceTasks.splice(source.index, 1);\r\n\r\n    const destinationTasks = [...newTasks[destination.droppableId]];\r\n    destinationTasks.splice(destination.index, 0, removedTask);\r\n\r\n    newTasks[source.droppableId] = sourceTasks;\r\n    newTasks[destination.droppableId] = destinationTasks;\r\n\r\n    setTasks(newTasks);\r\n\r\n    // Update task status in the API\r\n    const taskToUpdate = tasks[source.droppableId][source.index];\r\n    const newStatus = destination.droppableId;\r\n\r\n    // Make API call to update task status\r\n    updateTaskStatus(taskToUpdate.id, newStatus);\r\n  };\r\n\r\n  const updateTaskStatus = (taskId, newStatus) => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    axios\r\n      .patch(\r\n        `http://127.0.0.1:3000/api/v1/tasks/${taskId}`,\r\n        {\r\n          status: newStatus,\r\n          updated_By:localStorage.getItem(\"userid\"),\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(`Task ${taskId} status updated successfully:`, response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(`Error updating task ${taskId} status:`, error);\r\n      });\r\n  };\r\n\r\n  // Add a new category\r\n  const handleAddCategory = () => {\r\n    if (newCategory.trim() !== '') {\r\n      setTasks((prevTasks) => ({\r\n        ...prevTasks,\r\n        [newCategory]: [],\r\n      }));\r\n      setNewCategory('');\r\n      setShowAddCategoryPopup(false);\r\n    }\r\n  };\r\n\r\n  // Delete a category\r\n  const handleDeleteCategory = (category) => {\r\n    const updatedTasks = { ...tasks };\r\n    delete updatedTasks[category];\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  // Open KanbanPopup for adding a task to a category\r\n  const handleAddTaskToCategory = (category) => {\r\n    setCategoryToAddTask(category);\r\n    setShowKanbanPopup(true);\r\n  };\r\n\r\n  // Close KanbanPopup\r\n  const closeKanbanPopup = () => {\r\n    setShowKanbanPopup(false);\r\n    setCategoryToAddTask('');\r\n  };\r\n\r\n  const handleAddTask = (newTaskData, category) => {\r\n    const token = localStorage.getItem(\"token\");\r\n  \r\n    // Your logic for creating the task\r\n    const formData = {\r\n      name: newTaskData.name,\r\n      end_date: newTaskData.end_date,\r\n      description: newTaskData.description,\r\n      assignee: newTaskData.assignee, // Correct the property name\r\n      project: projectId,\r\n      status: category,\r\n    };\r\n    \r\n  \r\n    axios\r\n      .post(\"http://127.0.0.1:3000/api/v1/tasks\", JSON.stringify(formData), {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"Response from server:\", response); // Log the response\r\n        return response; // Try to parse response as JSON\r\n      })\r\n      .then((data) => {\r\n        console.log(\"Task created successfully:\", data);\r\n        // Update the state to reflect the new task in the specified category\r\n        setTasks((prevTasks) => {\r\n          const categoryTasks = [...prevTasks[category]];\r\n          const newTask = {\r\n            id: data.id, // Use the task ID returned from the server\r\n            content: newTaskData.name,\r\n            project: newTaskData.projectId,\r\n            assignee:newTaskData.assign,\r\n            end_date: newTaskData.end_date,\r\n            \r\n            description: newTaskData.description,\r\n          };\r\n  \r\n          categoryTasks.push(newTask);\r\n  \r\n          return {\r\n            ...prevTasks,\r\n            [category]: categoryTasks,\r\n          };\r\n        });\r\n  \r\n        // Close the KanbanPopup\r\n        setShowKanbanPopup(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Task creation failed\", error);\r\n        // Handle errors and show appropriate messages\r\n      });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <ProjectProgress />\r\n\r\n      <div style={{ marginTop: \"-350px\" }} className=\"kanban-container\">\r\n        {/* KanbanComponent content */}\r\n        <DragDropContext  onDragEnd={onDragEnd}>\r\n          <div className=\"kanban-columns\">\r\n            {/* Render existing categories */}\r\n            {Object.keys(tasks)\r\n              .sort()\r\n              .map((columnId) => (\r\n                <div key={columnId} className=\"kanban-column\">\r\n                  <div className=\"column-header\">\r\n                    <h3>{columnId === 'inProgress' ? 'IN PROGRESS' : columnId.toUpperCase()}</h3>\r\n                    <div className=\"column-buttons\">\r\n                    {userrole===\"Project Manager\"  && (\r\n                      <Button shape=\"round\" onClick={() => handleDeleteCategory(columnId)} className=\"delete-button\">\r\n                        -\r\n                      </Button>\r\n                    )}\r\n                    {userrole===\"Project Manager\"  && (\r\n                      <Button\r\n                      data-testid=\"add\"\r\n                        shape=\"round\"\r\n                        color=\"indigo_800_01\"\r\n                        onClick={() => handleAddTaskToCategory(columnId)}\r\n                      >\r\n                        +\r\n                      </Button>\r\n                    )}\r\n                    </div>\r\n                  </div>\r\n                  <Droppable droppableId={columnId} key={columnId}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        style={{\r\n                          background: snapshot.isDraggingOver ? '#A3BFFA' : '#EDF2F7',\r\n                          padding: '16px',\r\n                          minHeight: '150px',\r\n                          borderRadius: '8px',\r\n                        }}\r\n                      >\r\n                        {tasks[columnId]?.map((task, index) => (\r\n                          <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                            {(provided, snapshot) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                style={{\r\n                                  userSelect: 'none',\r\n                                  padding: '16px',\r\n                                  margin: '0 0 16px 0',\r\n                                  minHeight: '50px',\r\n                                  backgroundColor: snapshot.isDragging ? '#4299E1' : '#2C5282',\r\n                                  color: 'white',\r\n                                  borderRadius: '8px',\r\n                                  ...provided.draggableProps.style,\r\n                                }}\r\n                              >\r\n                                {task.name}\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </div>\r\n              ))}\r\n\r\n            {/* Render the new category if it exists */}\r\n            {newCategory.trim() !== '' && (\r\n              <div key={newCategory} className=\"kanban-column\">\r\n                <div className=\"column-header\">\r\n                  <h3>{newCategory.toUpperCase()}</h3>\r\n                  <div className=\"column-buttons\">\r\n                  {userrole===\"Project Manager\"  && (\r\n                    <Button shape=\"round\" onClick={() => handleDeleteCategory(newCategory)} className=\"delete-button\">\r\n                      -\r\n                    </Button>\r\n                  )}\r\n                    {userrole===\"Project Manager\"  && (\r\n                    <Button shape=\"round\" color=\"indigo_800_01\" onClick={() => handleAddTaskToCategory(newCategory)}>\r\n                      +\r\n                    </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <Droppable droppableId={newCategory} key={newCategory}>\r\n                  {/* Content for the new category */}\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      style={{\r\n                        background: snapshot.isDraggingOver ? '#A3BFFA' : '#EDF2F7',\r\n                        padding: '16px',\r\n                        minHeight: '150px',\r\n                        borderRadius: '8px',\r\n                      }}\r\n                    >\r\n                      {tasks[newCategory]?.map((task, index) => (\r\n                        <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                          {(provided, snapshot) => (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              style={{\r\n                                userSelect: 'none',\r\n                                padding: '16px',\r\n                                margin: '0 0 16px 0',\r\n                                minHeight: '50px',\r\n                                backgroundColor: snapshot.isDragging ? '#4299E1' : '#2C5282',\r\n                                color: 'white',\r\n                                borderRadius: '8px',\r\n                                ...provided.draggableProps.style,\r\n                              }}\r\n                            >\r\n                              {task.name}\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </DragDropContext>\r\n\r\n       {/* Add category popup */}\r\n       {showAddCategoryPopup && (\r\n          <div className=\"add-category-popup\">\r\n            <label htmlFor=\"newCategory\">Enter Category Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"newCategory\"\r\n              value={newCategory}\r\n              onChange={(e) => setNewCategory(e.target.value)}\r\n            />\r\n            <Button shape=\"round\" color=\"indigo_800_01\" onClick={handleAddCategory}>\r\n              Add\r\n            </Button>\r\n            <Button shape=\"round\" onClick={() => setShowAddCategoryPopup(false)} className=\"cancel-button\">\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Kanban popup */}\r\n        {showKanbanPopup && (\r\n          <KanbanPopup\r\n            task={{\r\n              name: '',\r\n              end_date: '',\r\n              assignee:'',\r\n              description: '',\r\n            }}\r\n            onClose={closeKanbanPopup}\r\n            onAddTask={(newTaskData) => handleAddTask(newTaskData, categoryToAddTask)}\r\n            assigne={assigne}\r\n          />\r\n        )}\r\n\r\n        {/* Button to add a new category */}\r\n        <div className=\"add-category-button\">\r\n        {userrole===\"Project Manager\"  && (\r\n          <Button data-testid=\"add\" style={{ position: 'absolute', top: 400, right: 80, margin: '8px' }} shape=\"round\" color=\"indigo_800_01\" onClick={() => setShowAddCategoryPopup(true)}>\r\n            +\r\n          </Button>\r\n        )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanComponent;\r\n","import React, { useState } from 'react';\r\nimport { Menu, MenuItem, Sidebar } from 'react-pro-sidebar';\r\nimport { Text } from '../../components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport AppsIcon from '@mui/icons-material/Apps';\r\n\r\nconst Navigation = () => {\r\n  const navigate = useNavigate();\r\n  const [hoveredItem, setHoveredItem] = useState(null);\r\n\r\n  const handleMenuItemClick = (route) => {\r\n    navigate(route);\r\n  };\r\n\r\n  let userrole=localStorage.getItem(\"role\")\r\n\r\n  const iconStyles = {\r\n    color: '#FFF7F1',\r\n    cursor: 'pointer',\r\n    padding: '10px',\r\n    display: 'flex',\r\n    marginLeft: '40px',\r\n  };\r\n\r\n  const textStyles = {\r\n    textAlign: 'left',\r\n    marginRight: '60px',\r\n  };\r\n\r\n  const handleMouseEnter = (menuItem) => {\r\n    setHoveredItem(menuItem);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredItem(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '20%', position: 'fixed', height: '100%' }}>\r\n      <Sidebar\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          background: '#332941',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        <Menu>\r\n          <Text\r\n            style={{\r\n              color: '#FFF7F1',\r\n              marginTop: '30px',\r\n              textShadow: '2px 2px 4px rgba(0, 0, 0, 0.25)',\r\n            }}\r\n            className=\"font-bold text-[22px] text-center sm:text-lg md:text-xl\"\r\n          >\r\n            ProjectFlow\r\n          </Text>\r\n          <MenuItem\r\n            style={{ ...iconStyles, marginTop: '80px', transform: hoveredItem === '/dashboard' ? 'scale(1.1)' : 'scale(1)', transition: 'transform 0.2s ease-in-out',}}\r\n            onMouseEnter={() => handleMouseEnter('/dashboard')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/dashboard')}\r\n          >\r\n            <DashboardIcon style={{ marginRight: '20px' }} />\r\n            <div style={{ ...textStyles, marginRight: 'auto' }}>Dashboard</div>\r\n          </MenuItem>\r\n          <MenuItem\r\n            style={{...iconStyles, transform: hoveredItem === '/myprojects' ? 'scale(1.1)' : 'scale(1)', transition: 'transform 0.2s ease-in-out', }}\r\n            onMouseEnter={() => handleMouseEnter('/myprojects')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/myprojects')}\r\n          >\r\n            <AssignmentIcon style={{ marginRight: '20px'}} />\r\n            <div style={{ ...textStyles, marginRight: 'auto' }}>Projects</div>\r\n          </MenuItem>\r\n          {userrole!==\"Client\" &&(\r\n          <MenuItem\r\n            style={{...iconStyles, transform: hoveredItem === '/mytasks' ? 'scale(1.1)' : 'scale(1)' , transition: 'transform 0.2s ease-in-out',}}\r\n            onMouseEnter={() => handleMouseEnter('/mytasks')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/mytasks')}\r\n          >\r\n            \r\n            <ListAltIcon style={{ marginRight: '20px'}} />\r\n           \r\n            <span style={{ ...textStyles, marginRight: 'auto' }}>My Tasks</span>\r\n           \r\n          </MenuItem>\r\n           )}\r\n          <MenuItem\r\n            style={{...iconStyles,transform: hoveredItem === '/apps' ? 'scale(1.1)' : 'scale(1)', transition: 'transform 0.2s ease-in-out',  }}\r\n            onMouseEnter={() => handleMouseEnter('/apps')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/apps')}\r\n          >\r\n            <AppsIcon style={{ marginRight: '20px' }} />\r\n            <span style={{ ...textStyles, marginRight: 'auto' }}>Apps</span>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Sidebar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n"],"names":["shapes","round","variants","gradient","blue_gray_300_01_deep_orange_500","fill","indigo_800","indigo_800_01","sizes","xs","sm","Button","_ref","_variants$variant","children","className","leftIcon","rightIcon","shape","size","variant","color","restProps","_jsxs","concat","Img","src","alt","_jsx","loading","ErrorMessage","errors","length","join","gray_100","Input","React","ref","wrapClassName","name","placeholder","type","label","prefix","suffix","onChange","_Fragment","e","_e$target","target","value","underline","white_A700","options","isSearchable","placeholderClassName","isMulti","indicator","selectedVal","setSelectedVal","Select","components","IndicatorSeparator","DropdownIndicator","data","map","d","styles","container","provided","zIndex","control","backgroundColor","border","boxShadow","minHeight","option","state","isSelected","singleValue","input","margin","padding","valueContainer","dropdownIndicator","paddingTop","paddingBottom","clearIndicator","multiValueLabel","menuPortal","base","menuPortalTarget","document","body","closeMenuOnScroll","event","id","defaultProps","sizeClasses","txtPoppinsBold16","txtInterBold16Gray900","txtInterMedium24","txtPoppinsBold20","txtInterBold16","txtPoppinsRegular16WhiteA70001","txtPoppinsBold22","txtPoppinsBold44","txtPoppinsBold34","txtPoppinsRegular16","txtPoppinsRegular16WhiteA700","txtInterBold24","txtPoppinsRegular22","txtInterMedium24WhiteA700","txtPoppinsMedium12","txtPoppinsExtraBold32","txtInterMedium24Gray700","Text","as","Component","progress","statisticsData","tasks","projectname","setProjectname","useState","activeItem","setActiveItem","navigate","useNavigate","projectId","useParams","location","useLocation","userrole","localStorage","getItem","useEffect","token","fetch","headers","Authorization","then","response","ok","Error","json","project","catch","error","console","pathname","includes","navigateTo","path","style","display","height","Navigation","width","marginLeft","onClick","justifyContent","alignItems","marginRight","marginTop","cursor","borderBottom","fontWeight","assigne","onClose","onAddTask","assign","setAssign","editedTask","setEditedTask","end_date","description","popupAnimation","useSpring","from","opacity","transform","to","handleInputChange","field","prevTask","position","top","left","background","backdropFilter","animated","div","borderRadius","fontFamily","fontSize","marginBottom","outline","selectedAssigneeId","member","handleAddTask","formData","assignee","KanbanComponent","setTasks","todo","inProgress","completed","log","filter","task","status","setAssigne","Members","newCategory","setNewCategory","showAddCategoryPopup","setShowAddCategoryPopup","showKanbanPopup","setShowKanbanPopup","categoryToAddTask","setCategoryToAddTask","updateTaskStatus","taskId","newStatus","axios","patch","updated_By","handleDeleteCategory","category","updatedTasks","handleAddTaskToCategory","ProjectProgress","DragDropContext","onDragEnd","result","source","destination","draggableId","droppableId","index","newTasks","sourceTasks","removedTask","splice","destinationTasks","taskToUpdate","Object","keys","sort","columnId","toUpperCase","Droppable","snapshot","_tasks$columnId","innerRef","isDraggingOver","Draggable","draggableProps","dragHandleProps","userSelect","isDragging","trim","_tasks$newCategory","htmlFor","handleAddCategory","prevTasks","KanbanPopup","closeKanbanPopup","newTaskData","post","JSON","stringify","categoryTasks","newTask","content","push","right","hoveredItem","setHoveredItem","handleMenuItemClick","route","iconStyles","textStyles","textAlign","handleMouseEnter","menuItem","handleMouseLeave","Sidebar","Menu","textShadow","MenuItem","transition","onMouseEnter","onMouseLeave","DashboardIcon","AssignmentIcon","ListAltIcon","AppsIcon"],"sourceRoot":""}