{"version":3,"file":"static/js/675.b0bea3fe.chunk.js","mappings":"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","sources":["components/Button/index.jsx","components/Img/index.jsx","components/ErrorMessage/index.jsx","components/Input/index.jsx","components/SelectBox/index.jsx","components/Text/index.jsx","pages/MyTasks/taskdetails.jsx","pages/MyTasks/index.jsx","pages/Sidebar/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst shapes = { round: \"rounded-lg\" };\r\nconst variants = {\r\n  gradient: {\r\n    blue_gray_300_01_deep_orange_500: \"bg-gradient  text-white-A700\",\r\n  },\r\n  fill: {\r\n    indigo_800: \"bg-indigo-800 text-white-A700\",\r\n    indigo_800_01: \"bg-indigo-800_01 text-white-A700\",\r\n  },\r\n};\r\nconst sizes = { xs: \"p-3\", sm: \"p-[22px] sm:px-5\" };\r\n\r\nconst Button = ({\r\n  children,\r\n  className = \"\",\r\n  leftIcon,\r\n  rightIcon,\r\n  shape = \"\",\r\n  size = \"xs\",\r\n  variant = \"fill\",\r\n  color = \"\",\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <button\r\n      className={`${className} ${(shape && shapes[shape]) || \"\"} ${\r\n        (size && sizes[size]) || \"\"\r\n      } ${(variant && variants[variant]?.[color]) || \"\"}`}\r\n      {...restProps}\r\n    >\r\n      {!!leftIcon && leftIcon}\r\n      {children}\r\n      {!!rightIcon && rightIcon}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  shape: PropTypes.oneOf([\"round\"]),\r\n  size: PropTypes.oneOf([\"xs\", \"sm\"]),\r\n  variant: PropTypes.oneOf([\"gradient\", \"fill\"]),\r\n  color: PropTypes.oneOf([\r\n    \"blue_gray_300_01_deep_orange_500\",\r\n    \"indigo_800\",\r\n    \"indigo_800_01\",\r\n  ]),\r\n};\r\n\r\nexport { Button };\r\n","import React from \"react\";\r\n\r\nconst Img = ({\r\n  className,\r\n  src = \"defaultNoData.png\",\r\n  alt = \"testImg\",\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <img\r\n      className={className}\r\n      src={src}\r\n      alt={alt}\r\n      {...restProps}\r\n      loading={\"lazy\"}\r\n    />\r\n  );\r\n};\r\nexport { Img };\r\n","import React from \"react\";\r\n\r\nexport const ErrorMessage = ({ errors = [], className = \"\" }) => {\r\n  return (\r\n    errors?.length > 0 && (\r\n      <div\r\n        className={`text-red-500 text-left text-xs w-full mt-1 ${className}`}\r\n      >\r\n        {errors.join(\", \")}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ErrorMessage } from \"../ErrorMessage\";\r\n\r\nconst variants = { fill: { gray_100: \"bg-gray-100 text-gray-800\" } };\r\nconst shapes = {\r\n  round: \"rounded-bl-[15px] rounded-br-none rounded-tl-[15px] rounded-tr-none\",\r\n};\r\nconst sizes = { xs: \"p-6 sm:px-5\" };\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      wrapClassName = \"\",\r\n      className = \"\",\r\n      name = \"\",\r\n      placeholder = \"\",\r\n      type = \"text\",\r\n      children,\r\n      errors = [],\r\n      label = \"\",\r\n      prefix,\r\n      suffix,\r\n      onChange,\r\n      shape = \"round\",\r\n      size = \"xs\",\r\n      variant = \"fill\",\r\n      color = \"gray_100\",\r\n      ...restProps\r\n    },\r\n    ref,\r\n  ) => {\r\n    const handleChange = (e) => {\r\n      if (onChange) onChange(e?.target?.value);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className={`${wrapClassName} \r\n              ${shapes[shape] || \"\"} \r\n              ${variants[variant]?.[color] || \"\"} \r\n              ${sizes[size] || \"\"}`}\r\n        >\r\n          {!!label && label}\r\n          {!!prefix && prefix}\r\n          <input\r\n            ref={ref}\r\n            className={`${className} bg-transparent border-0`}\r\n            type={type}\r\n            name={name}\r\n            onChange={handleChange}\r\n            placeholder={placeholder}\r\n            {...restProps}\r\n          />\r\n          {!!suffix && suffix}\r\n        </div>\r\n        {!!errors && <ErrorMessage errors={errors} />}\r\n      </>\r\n    );\r\n  },\r\n);\r\n\r\nInput.propTypes = {\r\n  wrapClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  type: PropTypes.string,\r\n  shape: PropTypes.oneOf([\"round\"]),\r\n  size: PropTypes.oneOf([\"xs\"]),\r\n  variant: PropTypes.oneOf([\"fill\"]),\r\n  color: PropTypes.oneOf([\"gray_100\"]),\r\n};\r\n\r\nexport { Input };\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ErrorMessage } from \"../ErrorMessage\";\r\n\r\nconst variants = {\r\n  underline: { white_A700: \"border-b border-white-A700 text-blue_gray-900\" },\r\n};\r\n\r\nconst sizes = { xs: \"pb-px\" };\r\n\r\nconst SelectBox = React.forwardRef(\r\n  (\r\n    {\r\n      children,\r\n      placeholder = \"Select\",\r\n      className = \"\",\r\n      options = [],\r\n      isSearchable = false,\r\n      placeholderClassName = \"\",\r\n      isMulti = false,\r\n      onChange,\r\n      value = \"\",\r\n      errors = [],\r\n      indicator,\r\n      shape = \"\",\r\n      size = \"xs\",\r\n      variant = \"underline\",\r\n      color = \"white_A700\",\r\n      ...restProps\r\n    },\r\n    ref,\r\n  ) => {\r\n    const [selectedVal, setSelectedVal] = React.useState(value);\r\n\r\n    const handleChange = (data) => {\r\n      setSelectedVal(data);\r\n      if (isMulti) {\r\n        onChange?.(data?.map((d) => d.value) || []);\r\n      } else {\r\n        onChange?.(data?.value);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Select\r\n          ref={ref}\r\n          options={options}\r\n          className={`${className} ${(size && sizes[size]) || \"\"} ${\r\n            (variant && variants[variant]?.[color]) || \"\"\r\n          }`}\r\n          placeholder={\r\n            <div className={placeholderClassName}>{placeholder}</div>\r\n          }\r\n          isSearchable={isSearchable}\r\n          isMulti={isMulti}\r\n          components={{\r\n            IndicatorSeparator: () => null,\r\n            ...(indicator && { DropdownIndicator: () => indicator }),\r\n          }}\r\n          value={selectedVal}\r\n          onChange={handleChange}\r\n          styles={{\r\n            container: (provided) => ({\r\n              ...provided,\r\n              zIndex: 0,\r\n            }),\r\n            control: (provided) => ({\r\n              ...provided,\r\n              backgroundColor: \"transparent\",\r\n              border: \"0 !important\",\r\n              boxShadow: \"0 !important\",\r\n              minHeight: \"auto\",\r\n              \"&:hover\": {\r\n                border: \"0 !important\",\r\n              },\r\n            }),\r\n            option: (provided, state) => ({\r\n              ...provided,\r\n              color: state.isSelected && \"#fafafa\",\r\n              backgroundColor: state.isSelected && \"#323e73\",\r\n              \"&:hover\": { backgroundColor: \"#323e73\", color: \"#ffffff\" },\r\n            }),\r\n            singleValue: (provided) => ({\r\n              ...provided,\r\n              color: \"inherit\",\r\n            }),\r\n            input: (provided) => ({\r\n              ...provided,\r\n              color: \"inherit\",\r\n              margin: \"0\",\r\n              padding: \"0\",\r\n              // height: \"0\",\r\n            }),\r\n            valueContainer: (provided) => ({\r\n              ...provided,\r\n              padding: \"0\",\r\n            }),\r\n            dropdownIndicator: (provided) => ({\r\n              ...provided,\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"0px\",\r\n            }),\r\n            clearIndicator: (provided) => ({\r\n              ...provided,\r\n              padding: \"0\",\r\n            }),\r\n            multiValueLabel: (provided) => ({\r\n              ...provided,\r\n              padding: \"0\",\r\n            }),\r\n            menuPortal: (base) => ({ ...base, zIndex: 999999 }),\r\n            placeholder: (base) => ({\r\n              ...base,\r\n              margin: 0,\r\n            }),\r\n          }}\r\n          menuPortalTarget={document.body}\r\n          closeMenuOnScroll={(event) => {\r\n            return event.target.id === \"scrollContainer\";\r\n          }}\r\n          {...restProps}\r\n        />\r\n        <ErrorMessage errors={errors} />\r\n        {children}\r\n      </>\r\n    );\r\n  },\r\n);\r\n\r\nSelectBox.propTypes = {\r\n  placeholder: PropTypes.string,\r\n  className: PropTypes.string,\r\n  options: PropTypes.array,\r\n  isSearchable: PropTypes.bool,\r\n  placeholderClassName: PropTypes.string,\r\n  isMulti: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n\r\n  size: PropTypes.oneOf([\"xs\"]),\r\n  variant: PropTypes.oneOf([\"underline\"]),\r\n  color: PropTypes.oneOf([\"white_A700\"]),\r\n};\r\n\r\nSelectBox.defaultProps = {\r\n  placeholder: \"Select\",\r\n  className: \"\",\r\n  isSearchable: false,\r\n  placeholderClassName: \"\",\r\n  isMulti: false,\r\n  value: \"\",\r\n  variant: \"underline\",\r\n  color: \"white_A700\",\r\n  size: \"xs\",\r\n  options: [],\r\n  onChange: () => {},\r\n};\r\nexport { SelectBox };\r\n","import React from \"react\";\r\n\r\nconst sizeClasses = {\r\n  txtPoppinsBold16: \"font-bold font-poppins\",\r\n  txtInterBold16Gray900: \"font-bold font-inter\",\r\n  txtInterMedium24: \"font-inter font-medium\",\r\n  txtPoppinsBold20: \"font-bold font-poppins\",\r\n  txtInterBold16: \"font-bold font-inter\",\r\n  txtPoppinsRegular16WhiteA70001: \"font-normal font-poppins\",\r\n  txtPoppinsBold22: \"font-bold font-poppins\",\r\n  txtPoppinsBold44: \"font-bold font-poppins\",\r\n  txtPoppinsBold34: \"font-bold font-poppins\",\r\n  txtPoppinsRegular16: \"font-normal font-poppins\",\r\n  txtPoppinsRegular16WhiteA700: \"font-normal font-poppins\",\r\n  txtInterBold24: \"font-bold font-inter\",\r\n  txtPoppinsRegular22: \"font-normal font-poppins\",\r\n  txtInterMedium24WhiteA700: \"font-inter font-medium\",\r\n  txtPoppinsMedium12: \"font-medium font-poppins\",\r\n  txtPoppinsExtraBold32: \"font-extrabold font-poppins\",\r\n  txtInterMedium24Gray700: \"font-inter font-medium\",\r\n};\r\n\r\nconst Text = ({ children, className = \"\", size, as, ...restProps }) => {\r\n  const Component = as || \"p\";\r\n\r\n  return (\r\n    <Component\r\n      className={`text-left ${className} ${size && sizeClasses[size]}`}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport { Text };\r\n","import React from 'react';\r\nimport { Text, Button } from '../../components';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nconst TaskDetailsPopup = ({ task, onClose }) => {\r\n  const popupAnimation = useSpring({\r\n    from: { opacity: 0, transform: 'translate(-50%, -50%) scale(0.5)' },\r\n    to: { opacity: 1, transform: 'translate(-50%, -50%) scale(1)' },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* Background Overlay */}\r\n      <div\r\n        style={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n          background: 'rgba(255, 255, 255, 0.8)', // Adjust the opacity as needed\r\n          backdropFilter: 'blur(5px)', // Add the blur effect\r\n          zIndex: 1, // Set a higher zIndex than the popup container\r\n        }}\r\n      ></div>\r\n\r\n      {/* Popup */}\r\n      <animated.div\r\n        className=\"popup-container\"\r\n        style={{\r\n          ...popupAnimation,\r\n          zIndex: 2, // Ensure the popup appears on top of the overlay\r\n          position: 'fixed',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\r\n        }}\r\n      >\r\n        <div\r\n          className=\"bg-gray-50 popup-content\"\r\n          style={{\r\n            width: '80%',\r\n            padding: '20px',\r\n            borderRadius: '10px',\r\n          }}\r\n        >\r\n          <Text className=\"text-indigo-800\" style={{ fontFamily: 'Poppins', fontWeight: 'bold', fontSize: '24px', marginBottom: '10px' }}>\r\n            {task.name}\r\n          </Text>\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <Text style={{ fontSize: '16px' }}>Due Date: {task.end_date.substring(0, 10)}</Text>\r\n          </div>\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <Text style={{ fontSize: '16px' }}>Category: {task.userStoryDescription}</Text>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <Text style={{ fontSize: '16px' }}>Priority: {task.priority}</Text>\r\n          </div>\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <Text style={{ fontSize: '16px' }}>Status: {task.status}</Text>\r\n          </div>\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <Text style={{ fontSize: '16px' }}>Task Assignee: {task.assignee.name}</Text>\r\n          </div>\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <Text style={{ fontSize: '16px' }}>Subtasks: {task.subtasks && task.subtasks.length > 0 ? task.subtasks.join(', ') : 'None'}</Text>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <Text style={{ fontSize: '16px' }}>Description: {task.description}</Text>\r\n          </div>\r\n          <div className=\"flex flex-row justify-end\">\r\n            <Button className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-full\" onClick={onClose}>Done</Button>\r\n          </div>\r\n        </div>\r\n      </animated.div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskDetailsPopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Text, Button } from '../../components';\r\nimport Navigation from '../Sidebar';\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport TaskDetailsPopup from './taskdetails';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport axios from 'axios';\r\n\r\nconst MyTasksPage = () => {\r\n  const navigate = useNavigate();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [hoveredTask, setHoveredTask] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [popUp, setPopUp] = useState({ type: '', message: '' });\r\n  const isDesktopOrLaptop = useMediaQuery({ query: '(min-width: 1224px)' });\r\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1824px)' });\r\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\r\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' });\r\n  const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' });\r\n  useEffect(() => {\r\n    let token = localStorage.getItem('token');\r\n    const id = localStorage.getItem('userid');\r\n\r\n    if (localStorage.getItem('role') === 'Team Member') {\r\n      axios\r\n        .get('http://127.0.0.1:3000/api/v1/tasks', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setTasks(response.data.data.tasks);\r\n          setPopUp({ type: 'success', message: 'Tasks loaded successfully!' });\r\n        })\r\n        .catch((error) => {\r\n          setPopUp({ type: 'error' });\r\n          console.error('Error loading tasks:', error);\r\n        });\r\n    } else if (localStorage.getItem('role') === 'Project Manager') {\r\n      axios\r\n        .get(`http://127.0.0.1:3000/api/v1/users/${id}/tasks`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setTasks(response.data.data.tasks);\r\n          setPopUp({ type: 'success', message: 'Tasks loaded successfully!' });\r\n        })\r\n        .catch((error) => {\r\n          setPopUp({ type: 'error' });\r\n          console.error('Error loading tasks:', error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const getPriorityColor = (priority) => {\r\n    switch (priority) {\r\n      case 'High':\r\n        return 'red-700_01';\r\n      case 'Medium':\r\n        return 'deep_orange-500_01';\r\n      case 'Normal':\r\n        return 'green-A700_01';\r\n      default:\r\n        return 'gray-900';\r\n    }\r\n  };\r\n\r\n  const handleTaskClick = (task) => {\r\n    setSelectedTask(task);\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  const markTaskAsComplete = (taskId) => {\r\n    const updatedTasks = tasks.map((task) =>\r\n      task.id === taskId ? { ...task, status: 'completed' } : task\r\n    );\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n  \r\n    const updatedTasks = Array.from(tasks);\r\n    const [reorderedItem] = updatedTasks.splice(result.source.index, 1);\r\n  \r\n    const taskId = reorderedItem.id;\r\n    const token = localStorage.getItem('token');\r\n  \r\n    let newStatus;\r\n    switch (result.destination.droppableId) {\r\n      case 'dueTasks':\r\n        newStatus = 'todo';\r\n        break;\r\n      case 'completedTasks':\r\n        newStatus = 'completed';\r\n        break;\r\n      case 'overdueTasks':\r\n        newStatus = 'overdue';\r\n        break;\r\n      default:\r\n        newStatus = 'todo';\r\n    }\r\n  \r\n    axios\r\n      .patch(\r\n        `http://127.0.0.1:3000/api/v1/tasks/${taskId}`,\r\n        {\r\n          status: newStatus,\r\n          updated_By:localStorage.getItem(\"userid\")\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(`Task ${taskId} status updated successfully:`, response.data);\r\n  \r\n        const updatedTaskWithStatus = { ...reorderedItem, status: newStatus };\r\n        updatedTasks.splice(result.destination.index, 0, updatedTaskWithStatus);\r\n        setTasks(updatedTasks);\r\n      })\r\n      .catch((error) => {\r\n        console.error(`Error updating task ${taskId} status:`, error);\r\n      });\r\n  };\r\n  \r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'row', height: '100vh' }}>\r\n      <Navigation />\r\n\r\n      <div style={{ flex: 1, padding: '20px', marginLeft: isTabletOrMobile ? '0' : '300px' }}>\r\n        <Text\r\n          className=\"md:ml-[0] ml-[851px] text-base text-indigo-800 tracking-[0.44px] cursor-pointer\"\r\n          size=\"txtPoppinsRegular16\"\r\n          onClick={() => navigate('/myprofile')}\r\n          style={{\r\n            marginLeft: isTabletOrMobile ? '80%' : '80%',\r\n            fontSize: isDesktopOrLaptop ? '16px' : '12px', \r\n            textAlign: 'left',\r\n            color: '#1F2544',\r\n            marginTop: '50px',\r\n          }}\r\n        >\r\n          My Profile\r\n        </Text>\r\n        <Text\r\n           style={{ \r\n            marginLeft: '50px',\r\n            fontSize: '3xl', // Adjust this value as needed for different screen sizes\r\n            '@media (min-width: 640px)': {\r\n              fontSize: '3xl'\r\n            },\r\n            '@media (min-width: 768px)': {\r\n              fontSize: '3px'\r\n            },\r\n            fontSize: '34px',\r\n            textAlign: 'left',\r\n            color: '#1F2544',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginTop: '70px',\r\n            }}\r\n          size=\"txtPoppinsBold34\"\r\n        >\r\n          My Tasks\r\n        </Text>\r\n\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'flex-start',\r\n              margin: '20px 70px',\r\n            }}\r\n          >\r\n            {/* Due Tasks */}\r\n            <Droppable droppableId=\"dueTasks\">\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  style={{\r\n                    background: 'white',\r\n                    padding: 10,\r\n                    width: 250,\r\n                    marginBottom: '40px',\r\n                  }}\r\n                >\r\n                  <Text style={{ marginBottom: '20px' }} className=\"text-base text-indigo-800\" size=\"txtPoppinsBold16\">\r\n                    Due\r\n                  </Text>\r\n                  {tasks\r\n                    .filter((task) => task.status === 'todo')\r\n                    .map((task, index) => (\r\n                      <Draggable key={task.id} draggableId={`due-${task.id}`} index={index}>\r\n                        {(provided, snapshot) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            onClick={() => handleTaskClick(task)}\r\n                            onMouseEnter={() => setHoveredTask(task)}\r\n                            onMouseLeave={() => setHoveredTask(null)}\r\n                            style={{\r\n                              userSelect: 'none',\r\n                              padding: 16,\r\n                              margin: '0 0 8px 0',\r\n                              minHeight: '50px',\r\n                              backgroundColor: '#C9D7DD',\r\n                              color: '#323F73',\r\n                              border: '1px solid #6895D2',\r\n                              borderRadius: '8px',\r\n                              boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n                              ...provided.draggableProps.style,\r\n                            }}\r\n                          >\r\n                            <Text style={{ color: '#323F73', fontFamily: 'Poppins', fontWeight: 'bold' }}>{task.name}</Text>\r\n                            <Text style={{ color: '#6B7280' }}>Due Date: {task.end_date.substring(0, 10)}</Text>\r\n                            <Text style={{ color: `#${getPriorityColor(task.priority)}` }}>Priority: {task.priority}</Text>\r\n                            <FaCheck onClick={() => markTaskAsComplete(task.id)} size={20} color={`#323F73`} />\r\n                            {hoveredTask && hoveredTask.id === task.id && (\r\n                              <div>\r\n                                <Text>Description: {task.description}</Text>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n\r\n            {/* Completed Tasks */}\r\n            <Droppable droppableId=\"completedTasks\">\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  style={{\r\n                    background: 'white',\r\n                    padding: 10,\r\n                    width: 250,\r\n                    marginLeft: '70px',\r\n                    marginBottom: '20px',\r\n                    \r\n                  }}\r\n                >\r\n                  <Text style={{ marginBottom: '20px' }} className=\"text-base text-indigo-800\" size=\"txtPoppinsBold16\">\r\n                    Completed\r\n                  </Text>\r\n                  {tasks\r\n                    .filter((task) => task.status === 'completed')\r\n                    .map((task, index) => (\r\n                      <Draggable key={task.id} draggableId={`completed-${task.id}`} index={index}>\r\n                        {(provided, snapshot) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            onClick={() => handleTaskClick(task)}\r\n                            onMouseEnter={() => setHoveredTask(task)}\r\n                            onMouseLeave={() => setHoveredTask(null)}\r\n                            style={{\r\n                              userSelect: 'none',\r\n                              padding: 16,\r\n                              margin: '0 0 8px 0',\r\n                              minHeight: '50px',\r\n                              backgroundColor: '#9BCF53',\r\n                              color: '#323F73',\r\n                              border: '1px solid #6c906c',\r\n                              borderRadius: '8px',\r\n                              ...provided.draggableProps.style,\r\n                              boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\r\n                            }}\r\n                          >\r\n                            <Text style={{ color: '#323F73', fontFamily: 'Poppins', fontWeight: 'bold' }}>{task.name}</Text>\r\n                            <Text style={{ color: '#6B7280' }}>Due Date: {task.end_date.substring(0, 10)}</Text>\r\n                            <Text style={{ color: `#${getPriorityColor(task.priority)}` }}>Priority: {task.priority}</Text>\r\n                            <FaCheck size={20} color={`#${getPriorityColor(task.priority)}`} />\r\n                            {hoveredTask && hoveredTask.id === task.id && (\r\n                              <div>\r\n                                <Text>Description: {task.description}</Text>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n\r\n            {/* Overdue Tasks */}\r\n            <Droppable droppableId=\"overdueTasks\">\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  style={{\r\n                    background: 'white',\r\n                    padding: 10,\r\n                    width: 250,\r\n                    marginLeft: '70px',\r\n                    marginBottom: '20px',\r\n                  }}\r\n                >\r\n                  <Text style={{ marginBottom: '20px' }} className=\"text-base text-indigo-800\" size=\"txtPoppinsBold16\">\r\n                    Overdue\r\n                  </Text>\r\n                  {tasks\r\n                    .filter((task) => task.status === 'overdue')\r\n                    .map((task, index) => (\r\n                      <Draggable key={task.id} draggableId={`overdue-${task.id}`} index={index}>\r\n                        {(provided, snapshot) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            {...provided.dragHandleProps}\r\n                            onClick={() => handleTaskClick(task)}\r\n                            onMouseEnter={() => setHoveredTask(task)}\r\n                            onMouseLeave={() => setHoveredTask(null)}\r\n                            style={{\r\n                              userSelect: 'none',\r\n                              padding: 16,\r\n                              margin: '0 0 8px 0',\r\n                              minHeight: '50px',\r\n                              backgroundColor: '#DF826C',\r\n                              color: '#ffffff',\r\n                              border: '1px solid #ff1a1a',\r\n                              borderRadius: '8px',\r\n                              ...provided.draggableProps.style,\r\n                              boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\r\n                            }}\r\n                          >\r\n                            <Text style={{ color: '#323F73', fontFamily: 'Poppins', fontWeight: 'bold' }}>{task.name}</Text>\r\n                            <Text style={{ color: '#6B7280' }}>Due Date: {task.end_date.substring(0, 10)}</Text>\r\n                            <Text style={{ color: `#${getPriorityColor(task.priority)}` }}>Priority: {task.priority}</Text>\r\n                            <FaCheck size={20} color={`#323F73`} onClick={() => markTaskAsComplete(task.id)} />\r\n                            {hoveredTask && hoveredTask.id === task.id && (\r\n                              <div>\r\n                                <Text>Description: {task.description}</Text>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </DragDropContext>\r\n\r\n        {selectedTask && <TaskDetailsPopup task={selectedTask} onClose={handleClosePopup} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTasksPage;\r\n","import React, { useState } from 'react';\r\nimport { Menu, MenuItem, Sidebar } from 'react-pro-sidebar';\r\nimport { Text } from '../../components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport AppsIcon from '@mui/icons-material/Apps';\r\n\r\nconst Navigation = () => {\r\n  const navigate = useNavigate();\r\n  const [hoveredItem, setHoveredItem] = useState(null);\r\n\r\n  const handleMenuItemClick = (route) => {\r\n    navigate(route);\r\n  };\r\n\r\n  let userrole=localStorage.getItem(\"role\")\r\n\r\n  const iconStyles = {\r\n    color: '#FFF7F1',\r\n    cursor: 'pointer',\r\n    padding: '10px',\r\n    display: 'flex',\r\n    marginLeft: '40px',\r\n  };\r\n\r\n  const textStyles = {\r\n    textAlign: 'left',\r\n    marginRight: '60px',\r\n  };\r\n\r\n  const handleMouseEnter = (menuItem) => {\r\n    setHoveredItem(menuItem);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredItem(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '20%', position: 'fixed', height: '100%' }}>\r\n      <Sidebar\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          background: '#332941',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        <Menu>\r\n          <Text\r\n            style={{\r\n              color: '#FFF7F1',\r\n              marginTop: '30px',\r\n              textShadow: '2px 2px 4px rgba(0, 0, 0, 0.25)',\r\n            }}\r\n            className=\"font-bold text-[22px] text-center sm:text-lg md:text-xl\"\r\n          >\r\n            ProjectFlow\r\n          </Text>\r\n          <MenuItem\r\n            style={{ ...iconStyles, marginTop: '80px', transform: hoveredItem === '/dashboard' ? 'scale(1.1)' : 'scale(1)', transition: 'transform 0.2s ease-in-out',}}\r\n            onMouseEnter={() => handleMouseEnter('/dashboard')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/dashboard')}\r\n          >\r\n            <DashboardIcon style={{ marginRight: '20px' }} />\r\n            <div style={{ ...textStyles, marginRight: 'auto' }}>Dashboard</div>\r\n          </MenuItem>\r\n          <MenuItem\r\n            style={{...iconStyles, transform: hoveredItem === '/myprojects' ? 'scale(1.1)' : 'scale(1)', transition: 'transform 0.2s ease-in-out', }}\r\n            onMouseEnter={() => handleMouseEnter('/myprojects')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/myprojects')}\r\n          >\r\n            <AssignmentIcon style={{ marginRight: '20px'}} />\r\n            <div style={{ ...textStyles, marginRight: 'auto' }}>Projects</div>\r\n          </MenuItem>\r\n          {userrole!==\"Client\" &&(\r\n          <MenuItem\r\n            style={{...iconStyles, transform: hoveredItem === '/mytasks' ? 'scale(1.1)' : 'scale(1)' , transition: 'transform 0.2s ease-in-out',}}\r\n            onMouseEnter={() => handleMouseEnter('/mytasks')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/mytasks')}\r\n          >\r\n            \r\n            <ListAltIcon style={{ marginRight: '20px'}} />\r\n           \r\n            <span style={{ ...textStyles, marginRight: 'auto' }}>My Tasks</span>\r\n           \r\n          </MenuItem>\r\n           )}\r\n          <MenuItem\r\n            style={{...iconStyles,transform: hoveredItem === '/apps' ? 'scale(1.1)' : 'scale(1)', transition: 'transform 0.2s ease-in-out',  }}\r\n            onMouseEnter={() => handleMouseEnter('/apps')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/apps')}\r\n          >\r\n            <AppsIcon style={{ marginRight: '20px' }} />\r\n            <span style={{ ...textStyles, marginRight: 'auto' }}>Apps</span>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Sidebar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n"],"names":["shapes","round","variants","gradient","blue_gray_300_01_deep_orange_500","fill","indigo_800","indigo_800_01","sizes","xs","sm","Button","_ref","_variants$variant","children","className","leftIcon","rightIcon","shape","size","variant","color","restProps","_jsxs","concat","Img","src","alt","_jsx","loading","ErrorMessage","errors","length","join","gray_100","Input","React","ref","wrapClassName","name","placeholder","type","label","prefix","suffix","onChange","_Fragment","e","_e$target","target","value","underline","white_A700","options","isSearchable","placeholderClassName","isMulti","indicator","selectedVal","setSelectedVal","Select","components","IndicatorSeparator","DropdownIndicator","data","map","d","styles","container","provided","zIndex","control","backgroundColor","border","boxShadow","minHeight","option","state","isSelected","singleValue","input","margin","padding","valueContainer","dropdownIndicator","paddingTop","paddingBottom","clearIndicator","multiValueLabel","menuPortal","base","menuPortalTarget","document","body","closeMenuOnScroll","event","id","defaultProps","sizeClasses","txtPoppinsBold16","txtInterBold16Gray900","txtInterMedium24","txtPoppinsBold20","txtInterBold16","txtPoppinsRegular16WhiteA70001","txtPoppinsBold22","txtPoppinsBold44","txtPoppinsBold34","txtPoppinsRegular16","txtPoppinsRegular16WhiteA700","txtInterBold24","txtPoppinsRegular22","txtInterMedium24WhiteA700","txtPoppinsMedium12","txtPoppinsExtraBold32","txtInterMedium24Gray700","Text","as","Component","task","onClose","popupAnimation","useSpring","from","opacity","transform","to","style","position","top","left","width","height","background","backdropFilter","animated","div","borderRadius","fontFamily","fontWeight","fontSize","marginBottom","end_date","substring","userStoryDescription","priority","status","assignee","subtasks","description","onClick","MyTasksPage","navigate","useNavigate","tasks","setTasks","useState","hoveredTask","setHoveredTask","selectedTask","setSelectedTask","popUp","setPopUp","message","isDesktopOrLaptop","useMediaQuery","query","isTabletOrMobile","useEffect","token","localStorage","getItem","axios","get","headers","Authorization","then","response","catch","error","console","getPriorityColor","handleTaskClick","markTaskAsComplete","taskId","updatedTasks","display","flexDirection","Navigation","flex","marginLeft","textAlign","marginTop","alignItems","DragDropContext","onDragEnd","result","destination","Array","reorderedItem","splice","source","index","newStatus","droppableId","patch","updated_By","log","updatedTaskWithStatus","justifyContent","Droppable","innerRef","droppableProps","filter","Draggable","draggableId","snapshot","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","userSelect","FaCheck","TaskDetailsPopup","handleClosePopup","hoveredItem","setHoveredItem","handleMenuItemClick","route","userrole","iconStyles","cursor","textStyles","marginRight","handleMouseEnter","menuItem","handleMouseLeave","Sidebar","Menu","textShadow","MenuItem","transition","DashboardIcon","AssignmentIcon","ListAltIcon","AppsIcon"],"sourceRoot":""}