{"version":3,"file":"static/js/105.a02ff02c.chunk.js","mappings":"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","sources":["components/Button/index.jsx","components/Img/index.jsx","components/ErrorMessage/index.jsx","components/Input/index.jsx","components/SelectBox/index.jsx","components/Text/index.jsx","pages/NewProject/inviteMembers.jsx","pages/Sidebar/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst shapes = { round: \"rounded-lg\" };\r\nconst variants = {\r\n  gradient: {\r\n    blue_gray_300_01_deep_orange_500: \"bg-gradient  text-white-A700\",\r\n  },\r\n  fill: {\r\n    indigo_800: \"bg-indigo-800 text-white-A700\",\r\n    indigo_800_01: \"bg-indigo-800_01 text-white-A700\",\r\n  },\r\n};\r\nconst sizes = { xs: \"p-3\", sm: \"p-[22px] sm:px-5\" };\r\n\r\nconst Button = ({\r\n  children,\r\n  className = \"\",\r\n  leftIcon,\r\n  rightIcon,\r\n  shape = \"\",\r\n  size = \"xs\",\r\n  variant = \"fill\",\r\n  color = \"\",\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <button\r\n      className={`${className} ${(shape && shapes[shape]) || \"\"} ${\r\n        (size && sizes[size]) || \"\"\r\n      } ${(variant && variants[variant]?.[color]) || \"\"}`}\r\n      {...restProps}\r\n    >\r\n      {!!leftIcon && leftIcon}\r\n      {children}\r\n      {!!rightIcon && rightIcon}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  shape: PropTypes.oneOf([\"round\"]),\r\n  size: PropTypes.oneOf([\"xs\", \"sm\"]),\r\n  variant: PropTypes.oneOf([\"gradient\", \"fill\"]),\r\n  color: PropTypes.oneOf([\r\n    \"blue_gray_300_01_deep_orange_500\",\r\n    \"indigo_800\",\r\n    \"indigo_800_01\",\r\n  ]),\r\n};\r\n\r\nexport { Button };\r\n","import React from \"react\";\r\n\r\nconst Img = ({\r\n  className,\r\n  src = \"defaultNoData.png\",\r\n  alt = \"testImg\",\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <img\r\n      className={className}\r\n      src={src}\r\n      alt={alt}\r\n      {...restProps}\r\n      loading={\"lazy\"}\r\n    />\r\n  );\r\n};\r\nexport { Img };\r\n","import React from \"react\";\r\n\r\nexport const ErrorMessage = ({ errors = [], className = \"\" }) => {\r\n  return (\r\n    errors?.length > 0 && (\r\n      <div\r\n        className={`text-red-500 text-left text-xs w-full mt-1 ${className}`}\r\n      >\r\n        {errors.join(\", \")}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ErrorMessage } from \"../ErrorMessage\";\r\n\r\nconst variants = { fill: { gray_100: \"bg-gray-100 text-gray-800\" } };\r\nconst shapes = {\r\n  round: \"rounded-bl-[15px] rounded-br-none rounded-tl-[15px] rounded-tr-none\",\r\n};\r\nconst sizes = { xs: \"p-6 sm:px-5\" };\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      wrapClassName = \"\",\r\n      className = \"\",\r\n      name = \"\",\r\n      placeholder = \"\",\r\n      type = \"text\",\r\n      children,\r\n      errors = [],\r\n      label = \"\",\r\n      prefix,\r\n      suffix,\r\n      onChange,\r\n      shape = \"round\",\r\n      size = \"xs\",\r\n      variant = \"fill\",\r\n      color = \"gray_100\",\r\n      ...restProps\r\n    },\r\n    ref,\r\n  ) => {\r\n    const handleChange = (e) => {\r\n      if (onChange) onChange(e?.target?.value);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className={`${wrapClassName} \r\n              ${shapes[shape] || \"\"} \r\n              ${variants[variant]?.[color] || \"\"} \r\n              ${sizes[size] || \"\"}`}\r\n        >\r\n          {!!label && label}\r\n          {!!prefix && prefix}\r\n          <input\r\n            ref={ref}\r\n            className={`${className} bg-transparent border-0`}\r\n            type={type}\r\n            name={name}\r\n            onChange={handleChange}\r\n            placeholder={placeholder}\r\n            {...restProps}\r\n          />\r\n          {!!suffix && suffix}\r\n        </div>\r\n        {!!errors && <ErrorMessage errors={errors} />}\r\n      </>\r\n    );\r\n  },\r\n);\r\n\r\nInput.propTypes = {\r\n  wrapClassName: PropTypes.string,\r\n  className: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  type: PropTypes.string,\r\n  shape: PropTypes.oneOf([\"round\"]),\r\n  size: PropTypes.oneOf([\"xs\"]),\r\n  variant: PropTypes.oneOf([\"fill\"]),\r\n  color: PropTypes.oneOf([\"gray_100\"]),\r\n};\r\n\r\nexport { Input };\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ErrorMessage } from \"../ErrorMessage\";\r\n\r\nconst variants = {\r\n  underline: { white_A700: \"border-b border-white-A700 text-blue_gray-900\" },\r\n};\r\n\r\nconst sizes = { xs: \"pb-px\" };\r\n\r\nconst SelectBox = React.forwardRef(\r\n  (\r\n    {\r\n      children,\r\n      placeholder = \"Select\",\r\n      className = \"\",\r\n      options = [],\r\n      isSearchable = false,\r\n      placeholderClassName = \"\",\r\n      isMulti = false,\r\n      onChange,\r\n      value = \"\",\r\n      errors = [],\r\n      indicator,\r\n      shape = \"\",\r\n      size = \"xs\",\r\n      variant = \"underline\",\r\n      color = \"white_A700\",\r\n      ...restProps\r\n    },\r\n    ref,\r\n  ) => {\r\n    const [selectedVal, setSelectedVal] = React.useState(value);\r\n\r\n    const handleChange = (data) => {\r\n      setSelectedVal(data);\r\n      if (isMulti) {\r\n        onChange?.(data?.map((d) => d.value) || []);\r\n      } else {\r\n        onChange?.(data?.value);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Select\r\n          ref={ref}\r\n          options={options}\r\n          className={`${className} ${(size && sizes[size]) || \"\"} ${\r\n            (variant && variants[variant]?.[color]) || \"\"\r\n          }`}\r\n          placeholder={\r\n            <div className={placeholderClassName}>{placeholder}</div>\r\n          }\r\n          isSearchable={isSearchable}\r\n          isMulti={isMulti}\r\n          components={{\r\n            IndicatorSeparator: () => null,\r\n            ...(indicator && { DropdownIndicator: () => indicator }),\r\n          }}\r\n          value={selectedVal}\r\n          onChange={handleChange}\r\n          styles={{\r\n            container: (provided) => ({\r\n              ...provided,\r\n              zIndex: 0,\r\n            }),\r\n            control: (provided) => ({\r\n              ...provided,\r\n              backgroundColor: \"transparent\",\r\n              border: \"0 !important\",\r\n              boxShadow: \"0 !important\",\r\n              minHeight: \"auto\",\r\n              \"&:hover\": {\r\n                border: \"0 !important\",\r\n              },\r\n            }),\r\n            option: (provided, state) => ({\r\n              ...provided,\r\n              color: state.isSelected && \"#fafafa\",\r\n              backgroundColor: state.isSelected && \"#323e73\",\r\n              \"&:hover\": { backgroundColor: \"#323e73\", color: \"#ffffff\" },\r\n            }),\r\n            singleValue: (provided) => ({\r\n              ...provided,\r\n              color: \"inherit\",\r\n            }),\r\n            input: (provided) => ({\r\n              ...provided,\r\n              color: \"inherit\",\r\n              margin: \"0\",\r\n              padding: \"0\",\r\n              // height: \"0\",\r\n            }),\r\n            valueContainer: (provided) => ({\r\n              ...provided,\r\n              padding: \"0\",\r\n            }),\r\n            dropdownIndicator: (provided) => ({\r\n              ...provided,\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"0px\",\r\n            }),\r\n            clearIndicator: (provided) => ({\r\n              ...provided,\r\n              padding: \"0\",\r\n            }),\r\n            multiValueLabel: (provided) => ({\r\n              ...provided,\r\n              padding: \"0\",\r\n            }),\r\n            menuPortal: (base) => ({ ...base, zIndex: 999999 }),\r\n            placeholder: (base) => ({\r\n              ...base,\r\n              margin: 0,\r\n            }),\r\n          }}\r\n          menuPortalTarget={document.body}\r\n          closeMenuOnScroll={(event) => {\r\n            return event.target.id === \"scrollContainer\";\r\n          }}\r\n          {...restProps}\r\n        />\r\n        <ErrorMessage errors={errors} />\r\n        {children}\r\n      </>\r\n    );\r\n  },\r\n);\r\n\r\nSelectBox.propTypes = {\r\n  placeholder: PropTypes.string,\r\n  className: PropTypes.string,\r\n  options: PropTypes.array,\r\n  isSearchable: PropTypes.bool,\r\n  placeholderClassName: PropTypes.string,\r\n  isMulti: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n\r\n  size: PropTypes.oneOf([\"xs\"]),\r\n  variant: PropTypes.oneOf([\"underline\"]),\r\n  color: PropTypes.oneOf([\"white_A700\"]),\r\n};\r\n\r\nSelectBox.defaultProps = {\r\n  placeholder: \"Select\",\r\n  className: \"\",\r\n  isSearchable: false,\r\n  placeholderClassName: \"\",\r\n  isMulti: false,\r\n  value: \"\",\r\n  variant: \"underline\",\r\n  color: \"white_A700\",\r\n  size: \"xs\",\r\n  options: [],\r\n  onChange: () => {},\r\n};\r\nexport { SelectBox };\r\n","import React from \"react\";\r\n\r\nconst sizeClasses = {\r\n  txtPoppinsBold16: \"font-bold font-poppins\",\r\n  txtInterBold16Gray900: \"font-bold font-inter\",\r\n  txtInterMedium24: \"font-inter font-medium\",\r\n  txtPoppinsBold20: \"font-bold font-poppins\",\r\n  txtInterBold16: \"font-bold font-inter\",\r\n  txtPoppinsRegular16WhiteA70001: \"font-normal font-poppins\",\r\n  txtPoppinsBold22: \"font-bold font-poppins\",\r\n  txtPoppinsBold44: \"font-bold font-poppins\",\r\n  txtPoppinsBold34: \"font-bold font-poppins\",\r\n  txtPoppinsRegular16: \"font-normal font-poppins\",\r\n  txtPoppinsRegular16WhiteA700: \"font-normal font-poppins\",\r\n  txtInterBold24: \"font-bold font-inter\",\r\n  txtPoppinsRegular22: \"font-normal font-poppins\",\r\n  txtInterMedium24WhiteA700: \"font-inter font-medium\",\r\n  txtPoppinsMedium12: \"font-medium font-poppins\",\r\n  txtPoppinsExtraBold32: \"font-extrabold font-poppins\",\r\n  txtInterMedium24Gray700: \"font-inter font-medium\",\r\n};\r\n\r\nconst Text = ({ children, className = \"\", size, as, ...restProps }) => {\r\n  const Component = as || \"p\";\r\n\r\n  return (\r\n    <Component\r\n      className={`text-left ${className} ${size && sizeClasses[size]}`}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport { Text };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Text } from '../../components';\r\nimport { useNavigate,useLocation } from 'react-router-dom';\r\nimport { MyDatePicker } from '../../components';\r\nimport Navigation from '../Sidebar';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nconst InviteMembers = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const ProjectData = location.state;\r\n\r\n  const [formData, setFormData] = useState({\r\n  \r\n    emailAddresses: [''], // Initial email field\r\n  });\r\n\r\n  const [popUp, setPopUp] = useState({\r\n    type: null, // 'inviteSuccess' or 'projectSuccess' or 'error'\r\n  });\r\n\r\n  const [showInviteModal, setShowInviteModal] = useState(false);\r\n\r\n \r\n  let projectId=localStorage.getItem(\"proId\")\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const updatedEmails = [...formData.emailAddresses];\r\n    updatedEmails[index] = value;\r\n    setFormData({ ...formData, emailAddresses: updatedEmails });\r\n  };\r\n\r\n  const handleAddEmailField = () => {\r\n    setFormData((prevFormData) => {\r\n      const newEmailAddresses = [...prevFormData.emailAddresses, ''];\r\n      return { ...prevFormData, emailAddresses: newEmailAddresses };\r\n    });\r\n  };\r\n\r\n  const handleInvite = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      let emailData = {\r\n        emails: formData.emailAddresses,\r\n      };\r\n      \r\n      if (projectId) {\r\n        // Update the emailData object with projectId\r\n        emailData.projectId = projectId;\r\n      }\r\n      \r\n      // Now you can use the emailData object as needed\r\n      \r\n      const response = await fetch('http://127.0.0.1:3000/api/v1/projects/sendinvite', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(emailData),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        console.log('Invite emails sent successfully:', data);\r\n\r\n        if(projectId)\r\n        {\r\n          navigate(`/details/${projectId}`)\r\n        }\r\n        setPopUp({ type: 'inviteSuccess' });\r\n        setShowInviteModal(false);\r\n      } else {\r\n        console.error('Failed to send invite emails:', data);\r\n        setPopUp({ type: 'error' });\r\n      }\r\n    } catch (error) {\r\n      // console.error('Error sending invite emails:', error);\r\n      // setPopUp({ type: 'error' });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  const handleCreateProject = () => {\r\n    if (!ProjectData.projectName || !ProjectData.description || !ProjectData.dueDate) {\r\n      console.error('Please fill out all required fields.');\r\n      setPopUp({ type: 'error' });\r\n      return;\r\n    }\r\n\r\n    const projectData = {\r\n      name:ProjectData.projectName,\r\n      end_date: ProjectData.dueDate,\r\n      description: ProjectData.description,\r\n      member: formData.emailAddresses\r\n    };\r\n\r\n    let token = localStorage.getItem('token');\r\n    console.log(projectData)\r\n\r\n    fetch('http://127.0.0.1:3000/api/v1/projects', {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(projectData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setPopUp({ type: 'projectSuccess' });\r\n        navigate('/myprojects');\r\n      })\r\n      .catch((error) => {\r\n        // setPopUp({ type: 'error' });\r\n        // console.error('Project creation failed', error);\r\n      });\r\n  };\r\n\r\n  const renderEmailFields = () => {\r\n    return (\r\n      <div  className=\"flex flex-col items-end justify-between mt-[34px] w-[97%] md:w-full\">\r\n        {formData.emailAddresses.map((email, index) => (\r\n          <div key={index} className=\"flex flex-col ml-4 mt-4\">\r\n            {/* Email Label */}\r\n            <Text style={{ fontSize: \"16px\", fontFamily: \"Poppins\", color: \"#323F73\" }}>\r\n              Email Address\r\n            </Text>\r\n            <div style={{ boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',borderBottom: '1px solid #323F73', backgroundColor: '#F8FAFC', fontSize: '1rem', width: '76%' }}>\r\n              <input\r\n                type=\"text\"\r\n                name={`emailAddress-${index}`}\r\n                value={email}\r\n                onChange={(e) => handleInputChange(e, index)}\r\n                className=\"text-base w-full bg-gray-50 border-none border-b-2 border-indigo-800 focus:outline-none\"\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n  const popUpAnimation = useSpring({\r\n    opacity: popUp.type ? 1 : 0,\r\n    pointerEvents: popUp.type ? 'auto' : 'none',\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Set a timer to clear the pop-up after 3000 milliseconds (3 seconds)\r\n    const timer = setTimeout(() => {\r\n      setPopUp({ type: null });\r\n    }, 3000);\r\n\r\n    // Clear the timer when the component unmounts or when popUp.type changes\r\n    return () => clearTimeout(timer);\r\n  }, [popUp.type]);\r\n\r\n  const containerStyle = {\r\n    backgroundColor: '#F7F1E5',\r\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n    marginLeft: '15px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    marginTop: '10px',\r\n    padding: '39px',\r\n    paddingLeft: '5px',\r\n    paddingRight: '5px',\r\n    borderRadius: '30px',\r\n    width: '100%'\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex', flexDirection: 'row', height: '100vh' }}>\r\n        {/* Sidebar */}\r\n        <Navigation />\r\n        {/* New Project Form */}\r\n        <div style={{ width: '73%', padding: '20px', marginLeft: '320px' }}>\r\n          <Text\r\n            className=\"md:ml-[0] ml-[849px] text-base text-indigo-800 tracking-[0.44px]\"\r\n            size=\"txtPoppinsRegular16\"\r\n            onClick={() => navigate('/myprofile')}\r\n          >\r\n            My Profile\r\n          </Text>\r\n          {/* '+' Button to Add Email Field */}\r\n      \r\n\r\n          <Text\r\n            style={{ \r\n              marginLeft: '50px',\r\n              fontSize: '3xl', // Adjust this value as needed for different screen sizes\r\n              '@media (min-width: 640px)': {\r\n                fontSize: '3xl'\r\n              },\r\n              '@media (min-width: 768px)': {\r\n                fontSize: '3px'\r\n              },\r\n              fontSize: '34px',\r\n              textAlign: 'left',\r\n              color: '#1F2544',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '70px',\r\n             \r\n            }}\r\n            size=\"txtPoppinsBold34\"\r\n          >\r\n            Invite Members\r\n          </Text>\r\n          \r\n\r\n          <div style ={containerStyle}>\r\n            <div className=\"flex flex-col items-start justify-start mt-[19px] w-[95%] md:w-full\">\r\n               {/* '+' Button to Add Email Field */}\r\n               <Button\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  minWidth: \"40px\",\r\n                  marginLeft: \"760px\",\r\n                  fontSize: \"30px\",\r\n                  color: \"#323F73\",\r\n                  width: \"40px\",\r\n                  height: \"40px\",\r\n                  textAlign: \"center\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  borderRadius: \"50%\",\r\n                  border: \"1px solid #323F73\",\r\n                  transition: \"background-color 0.3s, color 0.3s\",\r\n                }}\r\n                onClick={handleAddEmailField}\r\n                onMouseOver={(e) => {\r\n                  e.currentTarget.style.backgroundColor = \"#323F73\";\r\n                  e.currentTarget.style.color = \"#F8FAFC\";\r\n                }}\r\n                onMouseOut={(e) => {\r\n                  e.currentTarget.style.backgroundColor = \"\";\r\n                  e.currentTarget.style.color = \"#323F73\";\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n             <div className=\"flex md:flex-col flex-row md:gap-10 items-start justify-between mt-[34px] w-[97%] md:w-full\">             \r\n                {/* Image on the left side */}\r\n                <img src=\"images/team.png\" alt=\"Email Icon\" style={{ width: '50%', marginRight: '8px' }} />\r\n                {/* Email Input Fields */}\r\n                {renderEmailFields()}                \r\n              </div>             \r\n              {/* Invite Button */}\r\n              <Button\r\n                className=\"cursor-pointer leading-[normal] min-w-[28px] ml-[635px] mt-[20px] text-base text-center tracking-[0.44px]\"\r\n                shape=\"round\"\r\n                style={{ backgroundColor: \"#860A35\", color: \"#ffffff\" }}\r\n                onClick={handleInvite}\r\n              >\r\n                Invite\r\n              </Button>\r\n\r\n             \r\n{ProjectData && ProjectData.name !== null && (\r\n  <Button\r\n    className=\"cursor-pointer leading-[normal] min-w-[84px] ml-[745px] mt-[-42px] text-base text-center tracking-[0.44px]\"\r\n    shape=\"round\"\r\n    color=\"indigo_800\"\r\n    onClick={handleCreateProject}\r\n  >\r\n    Create\r\n  </Button>\r\n)}\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Invite Modal */}\r\n      {showInviteModal && (\r\n        <div className=\"invite-modal\">\r\n          <div className=\"modal-content\">\r\n            <span className=\"close\" onClick={() => setShowInviteModal(false)}>\r\n              &times;\r\n            </span>\r\n            <p>Invite has been sent!</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Pop-up */}\r\n      <animated.div\r\n        style={{\r\n          ...popUpAnimation,\r\n          position: 'fixed',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: popUpAnimation.opacity.interpolate((opacity) => `translate(-50%, -50%) scale(${opacity})`),\r\n          background: popUp.type === 'inviteSuccess' ? 'rgba(0, 255, 0, 0.5)' : 'rgba(255, 0, 0, 0.5)',\r\n          padding: '20px',\r\n          borderRadius: '10px',\r\n        }}\r\n      >\r\n        <p>\r\n          {popUp.type === 'inviteSuccess' ? 'Invite Sent Successfully!' : 'Project Creation Failed. Please try again.'}\r\n        </p>\r\n      </animated.div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InviteMembers;\r\n","import React, { useState } from 'react';\r\nimport { Menu, MenuItem, Sidebar } from 'react-pro-sidebar';\r\nimport { Text } from '../../components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport AppsIcon from '@mui/icons-material/Apps';\r\n\r\nconst Navigation = () => {\r\n  const navigate = useNavigate();\r\n  const [hoveredItem, setHoveredItem] = useState(null);\r\n\r\n  const handleMenuItemClick = (route) => {\r\n    navigate(route);\r\n  };\r\n\r\n  let userrole=localStorage.getItem(\"role\")\r\n\r\n  const iconStyles = {\r\n    color: '#FFF7F1',\r\n    cursor: 'pointer',\r\n    padding: '10px',\r\n    display: 'flex',\r\n    marginLeft: '40px',\r\n  };\r\n\r\n  const textStyles = {\r\n    textAlign: 'left',\r\n    marginRight: '60px',\r\n  };\r\n\r\n  const handleMouseEnter = (menuItem) => {\r\n    setHoveredItem(menuItem);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredItem(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '20%', position: 'fixed', height: '100%' }}>\r\n      <Sidebar\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          background: '#332941',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        <Menu>\r\n          <Text\r\n            style={{\r\n              color: '#FFF7F1',\r\n              marginTop: '30px',\r\n              textShadow: '2px 2px 4px rgba(0, 0, 0, 0.25)',\r\n            }}\r\n            className=\"font-bold text-[22px] text-center sm:text-lg md:text-xl\"\r\n          >\r\n            ProjectFlow\r\n          </Text>\r\n          <MenuItem\r\n            style={{ ...iconStyles, marginTop: '80px', transform: hoveredItem === '/dashboard' ? 'scale(1.1)' : 'scale(1)', transition: 'transform 0.2s ease-in-out',}}\r\n            onMouseEnter={() => handleMouseEnter('/dashboard')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/dashboard')}\r\n          >\r\n            <DashboardIcon style={{ marginRight: '20px' }} />\r\n            <div style={{ ...textStyles, marginRight: 'auto' }}>Dashboard</div>\r\n          </MenuItem>\r\n          <MenuItem\r\n            style={{...iconStyles, transform: hoveredItem === '/myprojects' ? 'scale(1.1)' : 'scale(1)', transition: 'transform 0.2s ease-in-out', }}\r\n            onMouseEnter={() => handleMouseEnter('/myprojects')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/myprojects')}\r\n          >\r\n            <AssignmentIcon style={{ marginRight: '20px'}} />\r\n            <div style={{ ...textStyles, marginRight: 'auto' }}>Projects</div>\r\n          </MenuItem>\r\n          {userrole!==\"Client\" &&(\r\n          <MenuItem\r\n            style={{...iconStyles, transform: hoveredItem === '/mytasks' ? 'scale(1.1)' : 'scale(1)' , transition: 'transform 0.2s ease-in-out',}}\r\n            onMouseEnter={() => handleMouseEnter('/mytasks')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/mytasks')}\r\n          >\r\n            \r\n            <ListAltIcon style={{ marginRight: '20px'}} />\r\n           \r\n            <span style={{ ...textStyles, marginRight: 'auto' }}>My Tasks</span>\r\n           \r\n          </MenuItem>\r\n           )}\r\n          <MenuItem\r\n            style={{...iconStyles,transform: hoveredItem === '/apps' ? 'scale(1.1)' : 'scale(1)', transition: 'transform 0.2s ease-in-out',  }}\r\n            onMouseEnter={() => handleMouseEnter('/apps')}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={() => handleMenuItemClick('/apps')}\r\n          >\r\n            <AppsIcon style={{ marginRight: '20px' }} />\r\n            <span style={{ ...textStyles, marginRight: 'auto' }}>Apps</span>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Sidebar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n"],"names":["shapes","round","variants","gradient","blue_gray_300_01_deep_orange_500","fill","indigo_800","indigo_800_01","sizes","xs","sm","Button","_ref","_variants$variant","children","className","leftIcon","rightIcon","shape","size","variant","color","restProps","_jsxs","concat","Img","src","alt","_jsx","loading","ErrorMessage","errors","length","join","gray_100","Input","React","ref","wrapClassName","name","placeholder","type","label","prefix","suffix","onChange","_Fragment","e","_e$target","target","value","underline","white_A700","options","isSearchable","placeholderClassName","isMulti","indicator","selectedVal","setSelectedVal","Select","components","IndicatorSeparator","DropdownIndicator","data","map","d","styles","container","provided","zIndex","control","backgroundColor","border","boxShadow","minHeight","option","state","isSelected","singleValue","input","margin","padding","valueContainer","dropdownIndicator","paddingTop","paddingBottom","clearIndicator","multiValueLabel","menuPortal","base","menuPortalTarget","document","body","closeMenuOnScroll","event","id","defaultProps","sizeClasses","txtPoppinsBold16","txtInterBold16Gray900","txtInterMedium24","txtPoppinsBold20","txtInterBold16","txtPoppinsRegular16WhiteA70001","txtPoppinsBold22","txtPoppinsBold44","txtPoppinsBold34","txtPoppinsRegular16","txtPoppinsRegular16WhiteA700","txtInterBold24","txtPoppinsRegular22","txtInterMedium24WhiteA700","txtPoppinsMedium12","txtPoppinsExtraBold32","txtInterMedium24Gray700","Text","as","Component","InviteMembers","navigate","useNavigate","ProjectData","useLocation","formData","setFormData","useState","emailAddresses","popUp","setPopUp","showInviteModal","setShowInviteModal","projectId","localStorage","getItem","popUpAnimation","useSpring","opacity","pointerEvents","useEffect","timer","setTimeout","clearTimeout","style","display","flexDirection","height","Navigation","width","marginLeft","onClick","fontSize","textAlign","alignItems","marginTop","justifyContent","paddingLeft","paddingRight","borderRadius","cursor","minWidth","transition","handleAddEmailField","prevFormData","newEmailAddresses","onMouseOver","currentTarget","onMouseOut","marginRight","email","index","fontFamily","borderBottom","handleInputChange","updatedEmails","async","token","emailData","emails","response","fetch","method","headers","JSON","stringify","json","ok","console","log","error","handleCreateProject","projectName","description","dueDate","projectData","end_date","member","Authorization","then","catch","animated","div","position","top","left","transform","interpolate","background","hoveredItem","setHoveredItem","handleMenuItemClick","route","userrole","iconStyles","textStyles","handleMouseEnter","menuItem","handleMouseLeave","Sidebar","Menu","textShadow","MenuItem","onMouseEnter","onMouseLeave","DashboardIcon","AssignmentIcon","ListAltIcon","AppsIcon"],"sourceRoot":""}